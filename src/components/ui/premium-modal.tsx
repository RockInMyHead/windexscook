import React, { useCallback, useMemo } from 'react';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Check, Crown, Sparkles, Loader2 } from 'lucide-react';
import { useUser } from '@/contexts/UserContext';
import { toast } from '@/hooks/use-toast';

interface PremiumModalProps {
  isOpen: boolean;
  onClose: () => void;
  feature?: 'recipe' | 'image' | 'calorie' | string; // –ö–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç Premium
  onSuccess?: () => void; // Callback –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
}

export const PremiumModal: React.FC<PremiumModalProps> = ({ 
  isOpen, 
  onClose, 
  feature, 
  onSuccess 
}) => {
  const { hasActiveSubscription, activateSubscription } = useUser();
  const [isLoading, setIsLoading] = React.useState(false);

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
  const featureDescription = useMemo(() => {
    const descriptions = {
      recipe: 'AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤',
      image: '–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ —Ñ–æ—Ç–æ',
      calorie: '–ü–æ–¥—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π –ø–æ —Ñ–æ—Ç–æ',
      default: '–ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏'
    };
    return descriptions[feature as keyof typeof descriptions] || descriptions.default;
  }, [feature]);

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Premium
  const premiumFeatures = useMemo(() => [
    {
      icon: Sparkles,
      title: 'AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ –≤–∞—à–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤',
      highlight: feature === 'recipe'
    },
    {
      icon: Check,
      title: '–ü–æ–¥—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π',
      description: '–ê–Ω–∞–ª–∏–∑ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –±–ª—é–¥ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
      highlight: feature === 'calorie'
    },
    {
      icon: Check,
      title: '–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
      description: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ —Ñ–æ—Ç–æ',
      highlight: feature === 'image'
    }
  ], [feature]);

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
  const handleSubscribe = useCallback(async () => {
    console.log('üí∞ PremiumModal: handleSubscribe called');

    if (isLoading) {
      console.log('üí∞ PremiumModal: Already loading, skipping');
      return;
    }

    setIsLoading(true);
    try {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = JSON.parse(localStorage.getItem('ai-chef-user') || '{}');
      console.log('üí∞ PremiumModal: Retrieved user from localStorage:', user);

      if (!user.id || !user.email) {
        console.log('üí∞ PremiumModal: User validation failed - missing id or email');
        toast({
          title: "–û—à–∏–±–∫–∞",
          description: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏",
          variant: "destructive",
        });
        return;
      }

      console.log('üí∞ PremiumModal: Starting payment creation for user:', user.id, user.email);

      // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ API
      const response = await fetch('/api/payments/create', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId: user.id,
          userEmail: user.email,
          returnUrl: `${window.location.origin}/payment-success?userId=${user.id}`
        }),
      });

      if (!response.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂');
      }

      const paymentData = await response.json();

      console.log('üí∞ PremiumModal: Payment created successfully:', paymentData);
      console.log('üí∞ PremiumModal: Saving paymentId to localStorage:', paymentData.paymentId);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º paymentId –≤ localStorage –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É—Å–ø–µ—Ö–∞
      try {
        localStorage.setItem('pendingPaymentId', paymentData.paymentId);
        console.log('üí∞ PremiumModal: Successfully saved to localStorage');
        console.log('üí∞ PremiumModal: localStorage contents after save:', localStorage.getItem('pendingPaymentId'));
      } catch (storageError) {
        console.error('üí∞ PremiumModal: Failed to save to localStorage:', storageError);
      }

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
      console.log('üí∞ PremiumModal: Redirecting to payment URL:', paymentData.paymentUrl);
      window.location.href = paymentData.paymentUrl;
      
    } catch (error) {
      console.error('Payment error:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  }, [isLoading, onSuccess, onClose]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleClose = useCallback(() => {
    if (!isLoading) {
      onClose();
    }
  }, [isLoading, onClose]);

  return (
    <Dialog open={isOpen} onOpenChange={handleClose}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <div className="flex items-center gap-2">
            <Crown className="w-6 h-6 text-amber-500" />
            <DialogTitle>Premium –ø–æ–¥–ø–∏—Å–∫–∞</DialogTitle>
          </div>
          <DialogDescription>
            –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è {featureDescription} —Ç—Ä–µ–±—É–µ—Ç—Å—è Premium –ø–æ–¥–ø–∏—Å–∫–∞
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-4">
          {/* –¶–µ–Ω–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
          <div className="p-4 bg-gradient-to-r from-amber-50 to-orange-50 dark:from-amber-950 dark:to-orange-950 rounded-lg border border-amber-200 dark:border-amber-800">
            <div className="text-3xl font-bold text-amber-600 dark:text-amber-400 mb-1">
              1 ‚ÇΩ <span className="text-base font-normal text-muted-foreground">/—Ç–µ—Å—Ç</span>
            </div>
            <p className="text-sm text-muted-foreground">
              –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º AI-—Ñ—É–Ω–∫—Ü–∏—è–º
            </p>
            <Badge className="mt-2 bg-amber-100 text-amber-800 dark:bg-amber-900 dark:text-amber-200">
              –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä
            </Badge>
          </div>

          {/* –°–ø–∏—Å–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */}
          <div className="space-y-3">
            {premiumFeatures.map((feature, index) => {
              const IconComponent = feature.icon;
              return (
                <div 
                  key={index}
                  className={`flex items-start gap-3 p-3 rounded-lg transition-colors ${
                    feature.highlight 
                      ? 'bg-amber-50 dark:bg-amber-950 border border-amber-200 dark:border-amber-800' 
                      : 'hover:bg-muted/50'
                  }`}
                >
                  <IconComponent className={`w-5 h-5 flex-shrink-0 mt-0.5 ${
                    feature.highlight ? 'text-amber-500' : 'text-green-500'
                  }`} />
                  <div className="flex-1">
                    <p className={`font-medium ${feature.highlight ? 'text-amber-700 dark:text-amber-300' : ''}`}>
                      {feature.title}
                      {feature.highlight && (
                        <Badge className="ml-2 bg-amber-100 text-amber-800 dark:bg-amber-900 dark:text-amber-200 text-xs">
                          –¢—Ä–µ–±—É–µ—Ç—Å—è
                        </Badge>
                      )}
                    </p>
                    <p className="text-sm text-muted-foreground">
                      {feature.description}
                    </p>
                  </div>
                </div>
              );
            })}
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex gap-2">
            <Button 
              onClick={handleSubscribe}
              className="flex-1 bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white shadow-lg"
              size="lg"
              disabled={isLoading}
            >
              {isLoading ? (
                <>
                  <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                  –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º...
                </>
              ) : (
                <>
                  <Crown className="w-4 h-4 mr-2" />
                  –ü–æ–¥–∫–ª—é—á–∏—Ç—å Premium
                </>
              )}
            </Button>
            <Button 
              variant="outline"
              onClick={handleClose}
              size="lg"
              disabled={isLoading}
            >
              –ü–æ–∑–∂–µ
            </Button>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="text-center space-y-2">
            <p className="text-xs text-muted-foreground">
              –ß–∞—Ç —Å AI-–ø–æ–≤–∞—Ä–æ–º –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ
            </p>
            <p className="text-xs text-muted-foreground">
              –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è
            </p>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};
